---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Navigation from "../../components/layout/Navigation.astro";
import HeaderNavigation from "../../components/layout/HeaderNavigation.astro";
import ProjectCard from "../../components/content/ProjectCard.astro";
import FilterPanel from "../../components/forms/FilterPanel.astro";

const projects = await getCollection("project");
const featuredProjects = projects.filter(p => p.data.featured);
---

<Layout title="Projects">
  <div class="min-h-screen bg-background text-foreground">
        <HeaderNavigation currentPage="" />
    <Navigation containerType="wide" />

    <main class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-20">
      <!-- Header -->
      <header class="mb-20 text-center">
        <div class="space-y-6">
          <h1 class="heading-display">Projects</h1>
          <p class="text-hero-description max-w-3xl mx-auto font-light">
            Selected technical work and prototypes that always run in baseline mode. Each project demonstrates different technologies and approaches to solving real-world problems.
          </p>
          <div class="flex items-center justify-center gap-4 text-sm text-muted-foreground">
            <span class="flex items-center gap-2">
              <span class="status-dot-success"></span>
              Live Baseline
            </span>
            <span class="flex items-center gap-2">
              <span class="status-dot-info"></span>
              Replay Demo
            </span>
            <span class="flex items-center gap-2">
              <span class="status-dot-neutral"></span>
              Snapshot
            </span>
          </div>
        </div>
      </header>

      <!-- Featured Projects -->
      {featuredProjects.length > 0 && (
        <section class="mb-20">
          <div class="mb-12">
            <h2 class="text-section-title mb-4">Featured Work</h2>
            <div class="section-divider"></div>
          </div>
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12 items-stretch">
            {featuredProjects.slice(0, 2).map((project) => (
              <div data-project={JSON.stringify(project.data)} data-slug={project.slug} class="flex">
                <ProjectCard project={project} featured={true} />
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- Filters -->
      <section class="mb-12">
        <div class="mb-8">
          <h2 class="text-section-title mb-4">All Projects</h2>
          <div class="section-divider"></div>
        </div>
        <FilterPanel />
      </section>

      <!-- Empty State -->
      <div id="empty-state" class="text-center py-20 hidden">
        <div class="max-w-md mx-auto space-y-4">
          <div class="w-16 h-16 mx-auto bg-muted rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-medium">No projects found</h3>
          <p class="text-muted-foreground">
            Try adjusting your filters or search terms to find what you're looking for.
          </p>
          <button
            id="clear-filters"
            class="button-primary"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Reset Filters
          </button>
        </div>
      </div>

      <!-- Projects Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 items-stretch" id="projects-grid">
        {projects.map((project) => (
          <div data-project={JSON.stringify(project.data)} data-slug={project.slug} class="flex">
            <ProjectCard project={project} />
          </div>
        ))}
      </div>

      <!-- Results Summary -->
      <div id="results-summary" class="mt-12 text-center">
        <p class="text-sm text-muted-foreground">
          Showing <span id="visible-count">{projects.length}</span> of {projects.length} projects
        </p>
      </div>
    </main>
  </div>
</Layout>

<script>
  import { ProjectsPageController } from '../../scripts/projects/projects-page';

  document.addEventListener('DOMContentLoaded', () => {
    new ProjectsPageController();
  });
</script>
